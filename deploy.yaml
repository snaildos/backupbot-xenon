apiVersion: v1
kind: Namespace
metadata:
  name: xenon
  
---

apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: xenon
  labels:
    app: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: master

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: xenon
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
      role: master
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
    spec:
      containers:
      - name: master
        image: redis
        resources:
          requests:
            memory: 100Mi
          limits:
            memory: 250Mi
        ports:
        - containerPort: 6379

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: xenon
  namespace: xenon
spec:
  selector:
    matchLabels:
      app: xenon
  serviceName: "xenon"
  replicas: 16
  template:
    metadata:
      labels:
        app: xenon
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: xenon
        image: r.cfcr.io/{{CF_ACCOUNT}}/{{CF_REPO_NAME}}:{{CF_SHORT_REVISION}}
        env:
        - name: SHARD_COUNT
          value: "96"
        - name: SHARDS_PER_POD
          value: "6"
        envFrom:
        - configMapRef:
            name: xenon
        - secretRef:
            name: dbcred
        ports:
        - name: api
          containerPort: 9090
        livenessProbe:
          initialDelaySeconds: 1200
          periodSeconds: 60
          failureThreshold: 3
          httpGet:
            path: /health
            port: api
        resources:
          requests:
            memory: 1Gi
          limits:
            memory: 2Gi
      imagePullSecrets:
      - name: regcred